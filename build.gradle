plugins {
    id 'java'
    id 'maven-publish'
}

group = 'gg.mineral'
version = new Date().format('yyyyMMdd')

repositories {
    mavenCentral()
    maven {
        name "mineralDevPrivate"
        url "https://repo.mineral.gg/private"
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.token") ?: System.getenv("TOKEN")
        }
    }
    maven {
        url = 'https://repo.clojars.org/'
    }
}

dependencies {
    compileOnly 'gg.mineral.mineralspigot:mineralspigot-server:20240919-15.40.23'
    compileOnly 'gg.mineral:bot-api:20240921-19.50.24'
    compileOnly 'gg.mineral:database-api:20240919-16.58.32'
    compileOnly 'de.jeezycore:jeezy-core:20240920-13.06.03'
    compileOnly 'gg.mineral:bot-intelligence:20240919-15.52.07'
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    compileOnly 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.3.0'
    annotationProcessor 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.3.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
    archiveFileName = 'MineralPractice.jar'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }.collect {
            it.filter { file ->
                !file.name.startsWith('META-INF')
            }
        }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

afterEvaluate {project ->
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifactId = project.name
                version = new Date().format("yyyyMMdd-HH.mm.ss")
            }
        }

        repositories {
            maven {
                url = uri("https://repo.mineral.gg/private")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.token") ?: System.getenv("TOKEN")
                }
            }
        }
    }
}

